{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-category\"\n};\nconst _hoisted_2 = {\n  class: \"columns is-multiline\"\n};\nconst _hoisted_3 = {\n  class: \"column is-12\"\n};\nconst _hoisted_4 = {\n  class: \"is-size-2 has-text-centered\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_app_product_box = _resolveComponent(\"app-product-box\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", _hoisted_4, _toDisplayString($data.category.name), 1\n  /* TEXT */\n  )]), _createCommentVNode(\" !ProductBox Component \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.category.products, product => {\n    return _openBlock(), _createBlock(_component_app_product_box, {\n      key: product.id,\n      lp: product\n    }, null, 8\n    /* PROPS */\n    , [\"lp\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EACHA,KAAK,EAAC;;;;;uBAHtBC,oBAUM,KAVN,cAUM,CATFC,oBAQM,KARN,cAQM,CAPFA,oBAIM,KAJN,cAIM,CAHFA,oBAEK,IAFL,cAEKC,iBADCC,eAASC,IACV,CAFL,EACmB;EAAA;EADnB,CAGE,CAJN,CAOE,EAFFC,8CAEE,qBADFL,oBAAwGM,SAAxG,EAAwG,IAAxG,EAAwGC,YAArEJ,eAASK,QAA4D,EAAhFC,OAA4B,IAArB;yBAA/BC,aAAwGC,0BAAxG,EAAwG;MAAjDC,GAAG,EAAEH,OAAO,CAACI,EAAoC;MAA/BC,EAAE,EAAEL;IAA2B,CAAxG;;IAAA;GAAwG,CAAxG;;EAAA,CACE,EARN,CASE,CAVN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$data","name","_createCommentVNode","_Fragment","_renderList","products","product","_createBlock","_component_app_product_box","key","id","lp"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\django_vue_ecommerce\\djackets_vue\\src\\views\\Category.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-category\">\r\n        <div class=\"columns is-multiline\">\r\n            <div class=\"column is-12\">\r\n                <h2 class=\"is-size-2 has-text-centered\">\r\n                    {{category.name}}\r\n                </h2>\r\n            </div>\r\n            <!-- !ProductBox Component -->\r\n            <app-product-box v-for=\"product in category.products\" :key=\"product.id\" :lp=\"product\"></app-product-box>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n    import { toast } from 'bulma-toast'\r\n    import ProductBoxVue from '../components/ProductBox.vue'\r\n\r\n    export default{\r\n        name:'Category',\r\n        data(){\r\n            return{\r\n                category:{\r\n                    products:[]\r\n                }\r\n            }\r\n        },\r\n        component:{\r\n            'app-product-box':ProductBoxVue\r\n        },\r\n        methods:{\r\n            async getCategory(){\r\n                const categorySlug = this.$route.params.category_slug\r\n                console.log('Category Slug', categorySlug)\r\n                \r\n                this.$store.commit('setIsLoading',true)\r\n                await axios.get(`api/v1/products/${categorySlug}/`)\r\n                    .then((response)=>{\r\n                        this.category = response.data\r\n                        console.log('Category Value',this.category);\r\n                        window.document.title = this.category.name + '| Djackets'\r\n                    })\r\n                    .catch((err)=>{\r\n                        console.log(err)\r\n                        toast({\r\n                            message:'Someting went wrong.Pleasse try again',\r\n                            type:'is-danger',\r\n                            dismissible:true,\r\n                            pauseOnHover:true,\r\n                            duration:2000,\r\n                            position:'bottom-right',\r\n                        })\r\n                    })\r\n                this.$store.commit('setIsLoading',false)\r\n            }\r\n        },\r\n        mounted(){\r\n            this.getCategory()\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}