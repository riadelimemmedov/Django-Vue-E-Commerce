{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-category\"\n};\nconst _hoisted_2 = {\n  class: \"columns is-multiline\"\n};\nconst _hoisted_3 = {\n  class: \"column is-12\"\n};\nconst _hoisted_4 = {\n  class: \"is-size-2 has-text-centered\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", _hoisted_4, _toDisplayString($data.category), 1\n  /* TEXT */\n  )])])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EACHA,KAAK,EAAC;;;uBAHtBC,oBAQM,KARN,cAQM,CAPFC,oBAMM,KANN,cAMM,CALFA,oBAIM,KAJN,cAIM,CAHFA,oBAEK,IAFL,cAEKC,iBADCC,cACD,CAFL,EACc;EAAA;EADd,CAGE,CAJN,CAKE,CANN,CAOE,CARN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$data"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\django_vue_ecommerce\\djackets_vue\\src\\views\\Category.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-category\">\r\n        <div class=\"columns is-multiline\">\r\n            <div class=\"column is-12\">\r\n                <h2 class=\"is-size-2 has-text-centered\">\r\n                    {{category}}\r\n                </h2>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n    import { toast } from 'bulma-toast'\r\n\r\n    export default{\r\n        data(){\r\n            return{\r\n                category:{\r\n                    product:[]\r\n                }\r\n            }\r\n        },\r\n        methods:{\r\n            async getCategory(){\r\n                const categorySlug = this.$route.params.category_slug\r\n                \r\n                this.$store.commit('setIsLoading',true)\r\n                await axios.get(`api/v1/products/${categorySlug}`)\r\n                    .then((response)=>{\r\n                        this.category = response.data\r\n                    })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}