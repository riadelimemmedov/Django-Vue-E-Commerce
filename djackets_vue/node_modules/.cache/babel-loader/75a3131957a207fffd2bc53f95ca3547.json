{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'bulma-toast';\nimport useVuelidate from '@vuelidate/core';\nimport { required, email, minLength, maxLength, sameAs } from '@vuelidate/validators';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      repassword: '',\n      errors: []\n    };\n  },\n\n  methods: {\n    signUp() {}\n\n  },\n\n  setup() {\n    return {\n      $v: useVuelidate()\n    };\n  },\n\n  validations() {\n    return {\n      username: {\n        required,\n        minLength: minLength(5),\n        maxLength: maxLength(10)\n      },\n      password: {\n        required,\n        minLength: minLength(6),\n        maxLength: maxLength(12)\n      },\n      repassword: {\n        required,\n        minLength: minLength(6),\n        maxLength: maxLength(12),\n        sameAs: sameAs('password')\n      }\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAsDI,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,aAApB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAAyBC,SAAzB,EAAmCC,SAAnC,EAA6CC,MAA7C,QAA2D,uBAA3D;AAEA,eAAc;EACVC,IAAI,GAAE;IACF,OAAM;MACFC,QAAQ,EAAC,EADP;MAEFC,QAAQ,EAAC,EAFP;MAGFC,UAAU,EAAC,EAHT;MAIFC,MAAM,EAAC;IAJL,CAAN;EAMH,CARS;;EASVC,OAAO,EAAC;IACJC,MAAM,GAAE,CAER;;EAHI,CATE;;EAcVC,KAAK,GAAE;IACH,OAAO;MAACC,EAAE,EAACd,YAAY;IAAhB,CAAP;EACH,CAhBS;;EAiBVe,WAAW,GAAE;IACT,OAAM;MACFR,QAAQ,EAAC;QACLN,QADK;QAELE,SAAS,EAACA,SAAS,CAAC,CAAD,CAFd;QAGLC,SAAS,EAACA,SAAS,CAAC,EAAD;MAHd,CADP;MAMFI,QAAQ,EAAC;QACLP,QADK;QAELE,SAAS,EAACA,SAAS,CAAC,CAAD,CAFd;QAGLC,SAAS,EAACA,SAAS,CAAC,EAAD;MAHd,CANP;MAWFK,UAAU,EAAC;QACPR,QADO;QAEPE,SAAS,EAACA,SAAS,CAAC,CAAD,CAFZ;QAGPC,SAAS,EAACA,SAAS,CAAC,EAAD,CAHZ;QAIPC,MAAM,EAACA,MAAM,CAAC,UAAD;MAJN;IAXT,CAAN;EAkBJ;;AApCU,CAAd","names":["axios","toast","useVuelidate","required","email","minLength","maxLength","sameAs","data","username","password","repassword","errors","methods","signUp","setup","$v","validations"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\django_vue_ecommerce\\djackets_vue\\src\\views\\SignUp.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-sign-up\">\r\n        <div class=\"columns\">\r\n            <div class=\"column is-4 is-offset-4\">\r\n                <h1 class=\"title\">Sign Up</h1>\r\n                <form @submit.prevent=\"signUp\">\r\n                    <div class=\"field\">\r\n                        <label>Username</label>\r\n                        <div class=\"control\">\r\n                            <input @blur=\"$v.username.$touch()\" v-model=\"username\" :class=\"{'input is-danger':$v.username.$error}\" type=\"text\" class=\"input\" placeholder=\"Username\">\r\n                            <small v-if=\"$v.username.required.$invalid\" class=\"has-text-info is-block\" style=\"font-size:15px\">Please enter email</small>\r\n                            <small v-if=\"$v.username.minLength.$invalid\" class=\"has-text-info is-block\" style=\"font-size:15px\">Username minimum length is 5 characters</small>\r\n                            <small v-if=\"$v.username.maxLength.$invalid\" class=\"has-text-info is-block\" style=\"font-size:15px\">Username maximum length is 10 characters</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label>Password</label>\r\n                        <div class=\"control\">\r\n                            <input @input=\"$v.password.touch()\" v-model=\"password\" type=\"password\" class=\"input\" placeholder=\"Password\">\r\n                            <small v-if=\"$v.password.required.$invalid\" class=\"has-text-info is-block\" style=\"font-size:15px\">Please enter password</small>\r\n                            <small v-if=\"$v.password.minLength.$invalid\" class=\"has-text-info is-block\" style=\"font-size:15px\">Please input minumum {{$v.password.minLength.$params.min}} length for valid password</small>\r\n                            <small v-if=\"$v.password.maxLength.$invalid\" class=\"has-text-info is-block\" style=\"font-size:15px\">Please enter password</small>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label>Repeat Password</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"password\" v-model=\"repassword\" class=\"input\" placeholder=\"Passward Again\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"notification is-danger\" v-if=\"errors.length\">\r\n                        <p v-for=\"(error,index) in errors\" :key=\"index\">{{error}}</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button type=\"submit\" class=\"button is-dark is-outlined\">Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <router-link to=\"log-in/\" class=\"has-text-link is-family-sans-serif\">Click Here</router-link> to log in\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <strong>{{$v.password.minLength}}</strong>\r\n\r\n    </div>\r\n\r\n    \r\n\r\n</template>\r\n\r\n<script>   \r\n    import axios from 'axios'\r\n    import {toast} from 'bulma-toast'\r\n    import useVuelidate from '@vuelidate/core'\r\n    import { required, email,minLength,maxLength,sameAs } from '@vuelidate/validators'\r\n\r\n    export default{\r\n        data(){\r\n            return{\r\n                username:'',\r\n                password:'',\r\n                repassword:'',\r\n                errors:[]\r\n            }\r\n        },\r\n        methods:{\r\n            signUp(){\r\n\r\n            }\r\n        },\r\n        setup(){\r\n            return {$v:useVuelidate()}\r\n        },\r\n        validations(){\r\n            return{\r\n                username:{\r\n                    required,\r\n                    minLength:minLength(5),\r\n                    maxLength:maxLength(10)\r\n                },\r\n                password:{\r\n                    required,\r\n                    minLength:minLength(6),\r\n                    maxLength:maxLength(12)\r\n                },\r\n                repassword:{\r\n                    required,\r\n                    minLength:minLength(6),\r\n                    maxLength:maxLength(12),\r\n                    sameAs:sameAs('password')\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}